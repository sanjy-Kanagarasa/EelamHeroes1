@page "/category/{categoryId}"

@using EelamHeroes.Data
@using EelamHeroes.Models.Dto
@using EelamHeroes.Models.Entity
@using EelamHeroes.Repository.Interface
@inject IPostRepository PostRepository


@if (paginatedList == null)
{
    <div class="spinner"></div>
}
else
{
    <div class="container mb-5">
        <div class="intro">
            <h2 class="text-center mb-4" style="margin-top: 60px">@title</h2>
        </div>
        <div class="row">
            @foreach (var post in paginatedList.Items)
            {
                <div class="col-sm-12 col-md-6 col-lg-4 mt-3">
                    <div class=" mb-3" style="width: 100% !important;">
                        <div class="main-card">
                            <a href="/post/@post.Id">
                                <div class="image-top" style="background-image:url('@post.ImagePath.Replace("\\", "/")'), url('https://www.suntip.nl/assets/img/image-not-found.png')">
                                </div>
                                <div class="card-head">
                                    <p class="title">@post.Title</p>
                                </div>
                            </a>
                        </div>
                    </div>
                </div>
            }
        </div>
        <Pager PageIndex=@paginatedList.CurrentPage TotalPages=@paginatedList.TotalPages OnClick="PageIndexChanged"
               HasNextPage=@paginatedList.HasNext HasPreviousPage=@paginatedList.HasPrevious>
        </Pager>
    </div>
}

<style>
      .main-card{
              font-family: 'Arima Madurai', cursive;
              box-shadow: 0 3px 6px rgba(0,0,0,0.16), 0 3px 6px rgba(0,0,0,0.23);
          }
          .card-head{
              font-weight: 700;
              color: black;
              padding: 6px;
          background-color: #f3f3f3;
          }
          .title{
              margin-bottom: 0;
              font-size: 1.1rem;
          text-overflow: ellipsis;
          white-space: nowrap;
          overflow: hidden;
          text-align: center;
          }
          .image-top{
              -webkit-background-size: cover;
                  -moz-background-size: cover;
                  -o-background-size: cover;
                  background-size: cover;
                  background-position: center;
                  background-repeat:no-repeat;
                  
               min-height: 225px;
              }
</style>

@code {

    [Parameter]
    public string CategoryId { get; set; }

    PagedListDto<Post> paginatedList;
    int pageNr = 1;
    string title;

    //private IEnumerable<Post> posts;

    protected override async Task OnInitializedAsync()
    {
        title = CategoryId switch
        {
            "1" => "குருதிச்சுவடுகள்",
            "2" => "படைநடவடிக்கைகள்",
            "3" => "துயிலும் இல்லங்கள்",
            _ => title
            };
        await FetchData();
    }

    public async void PageIndexChanged(int newPageNumber)
    {
        if (newPageNumber < 1 || newPageNumber > paginatedList.TotalPages)
        {
            return;
        }
        pageNr = newPageNumber;
        await FetchData();
        StateHasChanged();
    }

    private async Task FetchData()
    {
        var result = await PostRepository.GetPostsByCategory(int.Parse(CategoryId), pageNr, 12);
        paginatedList = new PagedListDto<Post>
        {
            CurrentPage = result.CurrentPage,
            TotalPages = result.TotalPages,
            PageSize = result.PageSize,
            TotalCount = result.TotalCount,
            HasNext = result.HasNext,
            HasPrevious = result.HasPrevious,
            Items = result
        };
    }

}